// This file was autogenerated by some hot garbage in the `uniffi-bindgen-react-native` crate.
// Trust me, you don't want to mess with it!

import {
  type StructuralEquality as UniffiStructuralEquality,
  type UniffiForeignFuture as RuntimeUniffiForeignFuture,
  type UniffiRustCallStatus,
  type UniffiRustArcPtr,
  type UniffiRustFutureContinuationCallback as RuntimeUniffiRustFutureContinuationCallback,
  type UniffiResult,
 } from 'uniffi-bindgen-react-native';

interface NativeModuleInterface {
    ubrn_uniffi_internal_fn_func_ffi__string_to_byte_length(string: string, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_uniffi_internal_fn_func_ffi__string_to_arraybuffer(string: string, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_internal_fn_func_ffi__arraybuffer_to_string(buffer: Uint8Array, uniffi_out_err: UniffiRustCallStatus): string;
    ubrn_uniffi_lni_uniffi_fn_clone_clnnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_free_clnnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_constructor_clnnode_new(config: Uint8Array, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_create_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_decode(ptr: bigint, str: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_get_info(ptr: bigint): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_get_offer(ptr: bigint, search: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_list_offers(ptr: bigint, search: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_list_transactions(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_lookup_invoice(ptr: bigint, paymentHash: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_pay_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_clnnode_pay_offer(ptr: bigint, offer: Uint8Array, amountMsats: bigint, payerNote: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_clone_db(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_free_db(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_constructor_db_new(path: Uint8Array, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_db_lookup_payment(ptr: bigint, paymentId: Uint8Array, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_uniffi_lni_uniffi_fn_method_db_save(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_method_db_write_payment(ptr: bigint, payment: Uint8Array, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_clone_lndnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_free_lndnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_constructor_lndnode_new(config: Uint8Array, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_create_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_decode(ptr: bigint, str: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_get_info(ptr: bigint): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_get_offer(ptr: bigint, search: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_list_offers(ptr: bigint, search: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_list_transactions(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_lookup_invoice(ptr: bigint, paymentHash: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_pay_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_lndnode_pay_offer(ptr: bigint, offer: Uint8Array, amountMsats: bigint, payerNote: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_clone_phoenixdnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_free_phoenixdnode(ptr: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_fn_constructor_phoenixdnode_new(config: Uint8Array, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_create_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_get_info(ptr: bigint): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_get_offer(ptr: bigint): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_list_transactions(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_lookup_invoice(ptr: bigint, paymentHash: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_pay_invoice(ptr: bigint, params: Uint8Array): bigint;
    ubrn_uniffi_lni_uniffi_fn_method_phoenixdnode_pay_offer(ptr: bigint, offer: Uint8Array, amountMsats: bigint, payerNote: Uint8Array): bigint;
    ubrn_ffi_lni_uniffi_rust_future_poll_u8(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_u8(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_u8(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_u8(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_i8(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_i8(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_i8(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_i8(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_u16(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_u16(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_u16(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_u16(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_i16(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_i16(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_i16(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_i16(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_u32(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_u32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_u32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_u32(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_i32(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_i32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_i32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_i32(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_u64(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_u64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_u64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_u64(handle: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_ffi_lni_uniffi_rust_future_poll_i64(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_i64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_i64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_i64(handle: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_ffi_lni_uniffi_rust_future_poll_f32(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_f32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_f32(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_f32(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_f64(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_f64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_f64(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_f64(handle: bigint, uniffi_out_err: UniffiRustCallStatus): number;
    ubrn_ffi_lni_uniffi_rust_future_poll_pointer(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_pointer(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_pointer(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_pointer(handle: bigint, uniffi_out_err: UniffiRustCallStatus): bigint;
    ubrn_ffi_lni_uniffi_rust_future_poll_rust_buffer(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_rust_buffer(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_rust_buffer(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_rust_buffer(handle: bigint, uniffi_out_err: UniffiRustCallStatus): Uint8Array;
    ubrn_ffi_lni_uniffi_rust_future_poll_void(handle: bigint, callback: UniffiRustFutureContinuationCallback, callbackData: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_cancel_void(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_free_void(handle: bigint): void;
    ubrn_ffi_lni_uniffi_rust_future_complete_void(handle: bigint, uniffi_out_err: UniffiRustCallStatus): void;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_create_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_decode(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_get_info(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_get_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_list_offers(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_list_transactions(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_lookup_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_pay_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_clnnode_pay_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_db_lookup_payment(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_db_save(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_db_write_payment(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_create_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_decode(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_get_info(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_get_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_list_offers(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_list_transactions(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_lookup_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_pay_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_lndnode_pay_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_create_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_get_info(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_get_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_list_transactions(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_lookup_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_pay_invoice(): number;
    ubrn_uniffi_lni_uniffi_checksum_method_phoenixdnode_pay_offer(): number;
    ubrn_uniffi_lni_uniffi_checksum_constructor_clnnode_new(): number;
    ubrn_uniffi_lni_uniffi_checksum_constructor_db_new(): number;
    ubrn_uniffi_lni_uniffi_checksum_constructor_lndnode_new(): number;
    ubrn_uniffi_lni_uniffi_checksum_constructor_phoenixdnode_new(): number;
    ubrn_ffi_lni_uniffi_uniffi_contract_version(): number;
    ubrn_uniffi_internal_fn_method_clnnode_ffi__bless_pointer(pointer: bigint, uniffi_out_err: UniffiRustCallStatus): UniffiRustArcPtr;
    ubrn_uniffi_internal_fn_method_db_ffi__bless_pointer(pointer: bigint, uniffi_out_err: UniffiRustCallStatus): UniffiRustArcPtr;
    ubrn_uniffi_internal_fn_method_lndnode_ffi__bless_pointer(pointer: bigint, uniffi_out_err: UniffiRustCallStatus): UniffiRustArcPtr;
    ubrn_uniffi_internal_fn_method_phoenixdnode_ffi__bless_pointer(pointer: bigint, uniffi_out_err: UniffiRustCallStatus): UniffiRustArcPtr;
}

// Casting globalThis to any allows us to look for `NativeLni`
// if it was added via JSI.
//
// We use a getter here rather than simply `globalThis.NativeLni` so that
// if/when the startup sequence isn't just so, an empty value isn't inadvertantly cached.
const getter: () => NativeModuleInterface = () => (globalThis as any).NativeLni;
export default getter;

// Structs and function types for calling back into Typescript from Rust.
export type UniffiRustFutureContinuationCallback = (data: bigint, pollResult: number) => void;
type UniffiForeignFutureFree = (handle: bigint) => void;
type UniffiCallbackInterfaceFree = (handle: bigint) => void;
export type UniffiForeignFuture = {
  handle: bigint;
  free: UniffiForeignFutureFree;
};
export type UniffiForeignFutureStructU8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU8 = (callbackData: bigint, result: UniffiForeignFutureStructU8) => void;
export type UniffiForeignFutureStructI8 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI8 = (callbackData: bigint, result: UniffiForeignFutureStructI8) => void;
export type UniffiForeignFutureStructU16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU16 = (callbackData: bigint, result: UniffiForeignFutureStructU16) => void;
export type UniffiForeignFutureStructI16 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI16 = (callbackData: bigint, result: UniffiForeignFutureStructI16) => void;
export type UniffiForeignFutureStructU32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU32 = (callbackData: bigint, result: UniffiForeignFutureStructU32) => void;
export type UniffiForeignFutureStructI32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI32 = (callbackData: bigint, result: UniffiForeignFutureStructI32) => void;
export type UniffiForeignFutureStructU64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteU64 = (callbackData: bigint, result: UniffiForeignFutureStructU64) => void;
export type UniffiForeignFutureStructI64 = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteI64 = (callbackData: bigint, result: UniffiForeignFutureStructI64) => void;
export type UniffiForeignFutureStructF32 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF32 = (callbackData: bigint, result: UniffiForeignFutureStructF32) => void;
export type UniffiForeignFutureStructF64 = {
  returnValue: number;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteF64 = (callbackData: bigint, result: UniffiForeignFutureStructF64) => void;
export type UniffiForeignFutureStructPointer = {
  returnValue: bigint;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompletePointer = (callbackData: bigint, result: UniffiForeignFutureStructPointer) => void;
export type UniffiForeignFutureStructRustBuffer = {
  returnValue: Uint8Array;
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteRustBuffer = (callbackData: bigint, result: UniffiForeignFutureStructRustBuffer) => void;
export type UniffiForeignFutureStructVoid = {
  callStatus: UniffiRustCallStatus;
};
export type UniffiForeignFutureCompleteVoid = (callbackData: bigint, result: UniffiForeignFutureStructVoid) => void;

// UniffiRustFutureContinuationCallback is generated as part of the component interface's
// ffi_definitions. However, we need it in the runtime.
// We could:
// (a) do some complicated template logic to ensure the declaration is not generated here (possible)
// (b) import the generated declaration into the runtime (m a y b e) or…
// (c) generate the declaration anyway, and use a different declaration in the runtime.
//
// We chose (c) here as the simplest. In addition, we perform a compile time check that
// the two versions of `UniffiRustFutureContinuationCallback` are structurally equivalent.
//
// If you see the error:
// ```
// Type 'true' is not assignable to type 'false'.(2322)
// ```
// Then a new version of uniffi has changed the signature of the callback. Most likely, code in
// `typescript/src/async-rust-call.ts` will need to be changed.
//
// If you see the error:
// ```
// Cannot find name 'UniffiRustFutureContinuationCallback'. Did you mean 'RuntimeUniffiRustFutureContinuationCallback'?(2552)
// ```
// then you may not be using callbacks or promises, and uniffi is now not generating Futures and callbacks.
// You should not generate this if that is the case.
//
// ('You' being the bindings generator maintainer).
const isRustFutureContinuationCallbackTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiRustFutureContinuationCallback,
  UniffiRustFutureContinuationCallback
> = true;
const isUniffiForeignFutureTypeCompatible: UniffiStructuralEquality<
  RuntimeUniffiForeignFuture,
  UniffiForeignFuture
> = true;