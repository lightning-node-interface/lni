namespace lni {
    
};

[Error]
interface ApiError {
    Http(string reason);
    Api(string reason);
    Json(string reason);
};

dictionary Ip {
    string origin;
};

interface Fetcher {
  constructor(string url);

  string get_config();

  [Throws=ApiError, Async]
  Ip get_ip_address();
};

dictionary PhoenixdConfig {
  string url;
  string password;
};

interface PhoenixdNode {
  constructor(PhoenixdConfig config);

  [Throws=ApiError, Async]
  string get_offer();
};

record InfoResponse {
  nullable<string> node_id;
}

interface PhoenixService {
  constructor(string address, string authorization);

  [Throws=Error]
  InfoResponse get_info();
}